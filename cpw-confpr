#!/bin/tcsh -f

# Init config

set errorMessage = '\n\
How to use CPW ConfPr:\n\
	cpw-confpr [-C , -c mode, -b, -e app1 app2 appn, -V var1 var2 varn, -v] -d directory \n\
	\n\
	`-c mode`					Prepare the CMake Build System. `mode` is release or debug \n\
	`-b`						Execute the build system \n\
	`-e app1 -arg1 -arg2 -argn`	Execute in order the passed executables \n\
	`-d directory				Set the work directory \n\
	`-C`						Delete generated files \n\
	`-V`						Pass extra variables to CMake \n\
	`-v`						Prints the CPW ConfPr version \n\
'

# Variables
	# Boolean
	set clean = 0
	set configure = 0
	set build = 0
	set execute = 0
	set execute_conf = 0
	set directory = 0
	set vars = 0
	set version = 0
	# String
	set void = ""
	set mode = ""
	set workDirectory = ""
	set exes = ""
	set variables = ""
	
alias set_mode '\
		# See the build mode \
		if(-e ${workDirectory}/mode.log) then \
			set mode = `cat ${workDirectory}/mode.log` \
		else \
			echo "\nMode not especified on build." \
			echo $errorMessage \
			exit 1 \
		endif \
'

# See parameters
	foreach param($argv)
		switch ($param)
			case "-C":
				echo "- Clean option passed"
				@ clean = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-c":
				echo "- Configure option passed"
				@ configure = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-b":
				echo "- Build option passed"
				@ build = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-e":
				echo "- Execute option passed"
				if ( "$exes" != "$void" ) then
					set exes = "$exes ; "
				endif
				@ execute = 1
				@ execute_conf = 1
				@ vars = 0
			breaksw
			case "-d":
				@ directory = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-V":
				@ vars = 1
				@ execute = 0
			breaksw
			case "-v":
				@ version = 1
				@ execute = 0
				@ vars = 0
			breaksw
			default:
				if($directory) then
					@ directory = 0
					set workDirectory = $param
					echo "- Work directory: " $workDirectory
				endif
				if ($configure) then
					if ($mode == "") then
						set mode = $param
					endif
				endif
				if ($execute) then
					set exes = "$exes $param"
				endif
				if ($vars) then
					set variables = "$variables $param"
				endif
			breaksw
		endsw
	end
	
# Version
	if($version) then
		echo "0.0.1-Alpha"
		exit 0
	endif

# Directory
	if($workDirectory ==  "") then
		echo "\nDirectory not especified."
		echo $errorMessage
		exit 1
	endif

# Clean
	if($clean) then
		set_mode
		
		echo "- Sentence: rm -rf ${workDirectory}/${mode}" "${workDirectory}/mode.log"
		time rm -rf "${workDirectory}/${mode}" "${workDirectory}/mode.log"
		
		exit 0
	endif

# Configure
	if ($configure) then
		if("$mode" != "") then
			# Save mode
			echo $mode > "$workDirectory/mode.log"
			
			# CMake configure
			echo "- Configure: $mode mode"
			echo "- Sentence: cmake -S $workDirectory -B $workDirectory/${mode}" \
				"-DCMAKE_BUILD_TYPE=${mode}" \
				"$variables"
				
			(time cmake -S $workDirectory -B "$workDirectory/${mode}" \
				-DCMAKE_BUILD_TYPE=${mode} \
				$variables && exit 0) || exit 1
		else
			echo "\nMode not especified on build."
			echo $errorMessage
			exit 1
		endif
	endif
	
# Build system
	if ($build) then
		set_mode
		# Build
		if("$mode" != "") then
			echo "- Build system"
			echo "- Sentence: cmake --build ${workDirectory}/${mode}"
			(time cmake --build ${workDirectory}/${mode} && exit 0) || exit 1
		else
			echo "\nMode not especified on build."
			echo $errorMessage
			exit 1
		endif
	endif

# Execute
	if ($execute_conf) then
		set_mode
		
		if("$mode" != "") then
			# Execute every parameter
			echo "- Sentence: cd ${workDirectory}/${mode}/"
			cd ${workDirectory}/${mode}/
			echo "- Sentence: $exes"
			time ${exes}
		else
			echo "\nMode not especified on execution."
			echo $errorMessage
			exit 1
		endif
	endif
