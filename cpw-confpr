#!/bin/tcsh -f

# Init config

set messageError = '\n\
How to use CPW ConfPr:\n\
	cpw-confpr [-C , -c mode, -b, -e app1 app2 appn, -v var1 var2 varn] -d directory \n\
	\n\
	`-c mode`					Prepare the CMake Build System. `mode` is release or debug \n\
	`-b`						Execute the build system \n\
	`-e app1 -arg1 -arg2 -argn`	Execute in order the passed executables \n\
	`-d directory				Set the work directory \n\
	`-C`						Delete generated files \n\
	`-V`						Pass extra variables to CMake \n\
	`-v`						Prints the CPW ConfPr version \n\
'

# Variables
	# Boolean
	set clean = 0
	set configure = 0
	set build = 0
	set execute = 0
	set execute_conf = 0
	set directory = 0
	set vars = 0
	# String
	set void = ""
	set mode = ""
	set workDirectory = ""
	set exes = ""
	set variables = ""

# See parameters
	foreach param($argv)
		switch ($param)
			case "-C":
				echo "- Clean option passed"
				@ clean = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-c":
				echo "- Configure option passed"
				@ configure = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-b":
				echo "- Build option passed"
				@ build = 1
				@ execute = 0
				@ vars = 0
			breaksw
			case "-e":
				echo "- Execute option passed"
				if ( "$exes" != "$void" ) then
					set exes = "$exes ; "
				endif
				@ execute = 1
				@ execute_conf = 1
				@ vars = 0
			breaksw
			case "-d":
				@ directory = 1
				@ execute = 0
				@ vars = 0
			breaksw
				@ execute = 0
				@ vars = 0
			breaksw
			case "-v":
				@ vars = 1
				@ execute = 0
			breaksw
			default:
				if($directory) then
					@ directory = 0
					set workDirectory = $param
					echo "- Work directory: " $workDirectory
				endif
				if ($configure) then
					if ($mode == "") then
						set mode = $param
					endif
				endif
				if ($execute) then
					set exes = "$exes $param"
				endif
				if ($vars) then
					set variables = "$variables $param"
				endif
			breaksw
		endsw
	end
	
# Directory
	if($workDirectory ==  "") then
		echo "\nDirectory not especified."
		echo $messageError
		exit 1
	endif
	
# Clean
	if($clean) then
		echo "- Sentence: rm -rf ${workDirectory}/debug" "${workDirectory}/release" "${workDirectory}/mode.log"
		rm -rf "${workDirectory}/debug" "${workDirectory}/release" "${workDirectory}/mode.log"
	endif

# Configure
	if ($configure) then
		# Save mode
		echo $mode > "$workDirectory/mode.log"
		
		# Configure mode
		switch ($mode)
			case "debug":
				echo "- Configure: Debug mode"
				echo "- Sentence: cmake -S $workDirectory -B $workDirectory/debug" \
					"-DCMAKE_BUILD_TYPE=Debug" \
					"-DCMAKE_CXX_FLAGS=-Wall -Wextra -g -O0 $variables"
					
				# CMake configure
				cmake -S $workDirectory -B "$workDirectory/debug" \
					-DCMAKE_BUILD_TYPE=Debug \
					-DCMAKE_CXX_FLAGS="-Wall -Wextra -g -O0" $variables
					
				# Exit
				exit 0
			breaksw
			case "release":
				echo "- Configure: Release mode"
				echo "- Sentence: cmake -S $workDirectory -B $workDirectory/release" \
					"-DCMAKE_BUILD_TYPE=Release" \
					"-DCMAKE_CXX_FLAGS=-O3 $variables"
					
				# CMake configure
				cmake -S $workDirectory -B "$workDirectory/release" \
					-DCMAKE_BUILD_TYPE=Release \
					-DCMAKE_CXX_FLAGS="-O3" $variables
				
				# Exit
				exit 0
			breaksw
			default:
				echo "\nMode not especified on configure."
				echo $messageError
				exit 1
			breaksw
		endsw
	endif
	
# Build system
	if ($build) then
		# See the build mode
		set mode = `cat ${workDirectory}/mode.log`
		
		# Build per mode
		switch ($mode)
			case "debug":
				echo "- Build: Debug mode. "
				echo "- Sentence: cmake --build $workDirectory/debug"
				cmake --build "$workDirectory/debug"
			breaksw
			case "release":
				echo "- Build: Release mode. "
				echo "- Sentence: cmake --build $workDirectory/release"
				cmake --build "$workDirectory/release"
			breaksw
			default:
				echo "\nMode not especified on build."
				echo $messageError
				exit 1
			breaksw
		endsw
	endif

# Execute
	if ($execute_conf) then
		# See the build mode
		set mode = `cat ${workDirectory}/mode.log`
		if($mode == "") then
			echo "\nMode not especified on execute."
			echo $messageError
			exit 1
		endif
		
		# Execute every parameter
		echo "- Sentence: cd ${workDirectory}/${mode}/"
		cd ${workDirectory}/${mode}/
		echo "- Sentence: $exes"
		${exes}
	endif
